find_package(Catch2 REQUIRED)

find_program(DOT dot)

function(add_unit_test BASENAME)
  set(multiValueArgs LIBRARIES)
  cmake_parse_arguments(UT "" "" "${multiValueArgs}" ${ARGN})
  add_executable(${BASENAME} ${BASENAME}.cpp)
  target_link_libraries(${BASENAME} PRIVATE ${UT_LIBRARIES})
  add_test(NAME ${BASENAME} COMMAND ${BASENAME})
endfunction()

function(add_catch_test BASENAME)
  set(optionalArgs TEST_DOT_GRAPH)
  set(multiValueArgs LIBRARIES)
  cmake_parse_arguments(UT "${optionalArgs}" "" "${multiValueArgs}" ${ARGN})
  add_unit_test(${BASENAME} LIBRARIES Catch2::Catch2 ${UT_LIBRARIES})
  target_compile_definitions(${BASENAME} PRIVATE CATCH_CONFIG_MAIN)
  if(UT_TEST_DOT_GRAPH)
    if(NOT DOT)
      message(WARNING "dot program not found; all TEST_DOT_GRAPH options will be ignored.")
    else()
      add_test(NAME dot:${BASENAME} COMMAND dot -Tpdf ${BASENAME}.gv -o ${BASENAME}.pdf)
      set_tests_properties(dot:${BASENAME} PROPERTIES DEPENDS ${BASENAME} REQUIRED_FILES ${BASENAME}.gv)
    endif()
  endif()
endfunction()

add_unit_test(iterator_t)
add_unit_test(sized_tuple_t LIBRARIES meld::utilities)
add_unit_test(string_literal_t LIBRARIES meld::utilities)

# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=thread")

add_catch_test(cached_execution_t LIBRARIES meld::core TEST_DOT_GRAPH)
add_catch_test(cached_product_stores_t LIBRARIES meld::core)
add_catch_test(cartesian_product_t LIBRARIES meld::utilities)
add_catch_test(class_component_t LIBRARIES meld::core meld::core)
add_catch_test(dynamic_join_t LIBRARIES meld::graph)
add_catch_test(filter_t LIBRARIES meld::core)
add_catch_test(function_component_t LIBRARIES meld::core)
add_catch_test(hierarchical_nodes_t LIBRARIES TBB::tbb meld::core TEST_DOT_GRAPH)
add_catch_test(make_edges_t LIBRARIES meld::graph)
add_catch_test(multiple_function_component_t LIBRARIES meld::core)
add_catch_test(product_handle_t LIBRARIES meld::core)
add_catch_test(product_store_t LIBRARIES meld::core)
add_catch_test(replicated_t LIBRARIES TBB::tbb meld::utilities)
add_catch_test(serializer_t LIBRARIES meld::core TBB::tbb)
add_catch_test(splitter_t LIBRARIES meld::core TBB::tbb TEST_DOT_GRAPH)
add_catch_test(thread_counter_t LIBRARIES meld::core TBB::tbb)
add_catch_test(transition_t LIBRARIES meld::core)
